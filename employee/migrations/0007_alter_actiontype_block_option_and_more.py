# Generated by Django 5.1.6 on 2025-02-20 13:50

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0004_alter_announcement_is_active_and_more'),
        ('employee', '0006_alter_actiontype_created_by_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='actiontype',
            name='block_option',
            field=models.BooleanField(default=False, help_text='If is enabled, employees log in will be blocked based on period of suspension or dismissal.', verbose_name='Activer le blocage de la connexion\xa0:'),
        ),
        migrations.AlterField(
            model_name='actiontype',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='bonuspoint',
            name='encashment_condition',
            field=models.CharField(blank=True, choices=[('==', 'égal à'), ('>', 'supérieur à'), ('<', 'inférieur à'), ('>=', 'supérieur ou égal à'), ('<=', 'inférieur ou égal à')], max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='bonuspoint',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='disciplinaryaction',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='company_id',
            field=models.ForeignKey(blank=True, help_text="L'employé ne verra que les données de cette entreprise. Laisser vide pour un accès à toutes les entreprises.", null=True, on_delete=django.db.models.deletion.PROTECT, to='base.company', verbose_name='Entreprise'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='failed_login_attempts',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Nombre de tentatives de connexion infructueuses consécutives'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='is_selector',
            field=models.BooleanField(default=False, help_text='Si cette option est sélectionnée, cet employé ne verra que les recrutements qui lui sont attribués.', verbose_name='Est un sélecteur'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='last_password_change',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Dernière fois que le mot de passe a été changé'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='needs_password_change',
            field=models.BooleanField(default=True, help_text="Si Vrai, l'utilisateur doit changer son mot de passe lors de la prochaine connexion."),
        ),
        migrations.AlterField(
            model_name='employeebankdetails',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='employeegeneralsetting',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='employeenote',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='employeetag',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='employeeworkinformation',
            name='basic_salary',
            field=models.IntegerField(blank=True, default=0, null=True, verbose_name='Salaire de base'),
        ),
        migrations.AlterField(
            model_name='employeeworkinformation',
            name='date_joining',
            field=models.DateField(blank=True, null=True, verbose_name="Date d'embauche"),
        ),
        migrations.AlterField(
            model_name='employeeworkinformation',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail'),
        ),
        migrations.AlterField(
            model_name='employeeworkinformation',
            name='tags',
            field=models.ManyToManyField(blank=True, to='employee.employeetag', verbose_name="Étiquette d'employé"),
        ),
        migrations.AlterField(
            model_name='historicalbonuspoint',
            name='encashment_condition',
            field=models.CharField(blank=True, choices=[('==', 'égal à'), ('>', 'supérieur à'), ('<', 'inférieur à'), ('>=', 'supérieur ou égal à'), ('<=', 'inférieur ou égal à')], max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='historicalbonuspoint',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='historicalemployeeworkinformation',
            name='basic_salary',
            field=models.IntegerField(blank=True, default=0, null=True, verbose_name='Salaire de base'),
        ),
        migrations.AlterField(
            model_name='historicalemployeeworkinformation',
            name='date_joining',
            field=models.DateField(blank=True, null=True, verbose_name="Date d'embauche"),
        ),
        migrations.AlterField(
            model_name='historicalemployeeworkinformation',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail'),
        ),
        migrations.AlterField(
            model_name='notefiles',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='policy',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
        migrations.AlterField(
            model_name='policymultiplefile',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Est actif'),
        ),
    ]
